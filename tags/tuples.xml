<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title> =^..^= MEH (tuples)</title><link>https://chowy1026.github.io/</link><description></description><atom:link href="https://chowy1026.github.io/tags/tuples.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 07 Sep 2016 04:30:15 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Lists and Tuples and Dictionaries</title><link>https://chowy1026.github.io/course-notes/python-crash-notes/03-lists-and-tuples-and-dictionaries/</link><dc:creator>cHoWy</dc:creator><description>&lt;div&gt;&lt;h3&gt;Lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lists are mutable.  Lists can be modified throughout the life of a programme.&lt;/li&gt;
&lt;li&gt;Accessing Element in a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bicycles[0]&lt;/code&gt;, &lt;code&gt;bicycles[-1]&lt;/code&gt;, &lt;code&gt;bicycles[3]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Adding Elements to a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;motorcycles.append('ducati')&lt;/code&gt; // Add to end of the list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;motorcycles.insert(0, 'ducati')&lt;/code&gt; // Insert 'ducati' at position 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Removing Element from a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;del motorcycles[1]&lt;/code&gt; // remove element by index&lt;/li&gt;
&lt;li&gt;&lt;code&gt;last_owned = motorcycles.pop()&lt;/code&gt; // remove last element in motorcycles list and store as last_owned&lt;/li&gt;
&lt;li&gt;&lt;code&gt;most_expensive = motorcycles.pop(2)&lt;/code&gt; // remove third element in motorcycles list and store as most_expensive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;motorcycles.remove('yamaha')&lt;/code&gt; // remove element by value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Organizing a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cars.sort()&lt;/code&gt; // sorting permanently&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cars.sort(reverse=True)&lt;/code&gt; // sorting in reverse order, permanently&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sorted(cars)&lt;/code&gt; // temporarily sort a list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cars.reverse()&lt;/code&gt; //simply reverse the order of the list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Length of a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;len(cars)&lt;/code&gt; // returns integer of element count in the list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Copying a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;b = a[:]&lt;/code&gt; // b copies a, and is separate list from a&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Aliasing a List&lt;ul&gt;
&lt;li&gt;&lt;code&gt;q = p&lt;/code&gt; // q and p refers to same list object.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Looping through lists:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for x in {list_name}:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for x in range(1, 10):&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Tuples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Just like strings, tuples is IMMUTABLE.&lt;/li&gt;
&lt;li&gt;Values of Tuples can be reassigned, or overwritten.  &lt;ul&gt;
&lt;li&gt;&lt;code&gt;tup = ('alice', 'not in', 'wonderland')&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tup = ('alice', 'now in', 'wonderland')&lt;/code&gt; //final value will be the last assigned value.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tuples can be looped just like lists.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Dictionaries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elements in dictionaries are stored in key-value pairs.&lt;/li&gt;
&lt;li&gt;Value is assessed by key.&lt;/li&gt;
&lt;li&gt;Looping through dictionaries:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for x, y in dict.items():&lt;/code&gt; // looping through x, y {key-value} pairs in dict&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for ky in dict.keys():&lt;/code&gt; // looping through all keys of dict dictionary&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for val in dict.values():&lt;/code&gt; // looping through all values of dict dictionary&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set(dict.values())&lt;/code&gt; // build a set by selecting unique items from dict.values()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>lists</category><category>python-crash-course</category><category>tuples</category><guid>https://chowy1026.github.io/course-notes/python-crash-notes/03-lists-and-tuples-and-dictionaries/</guid><pubDate>Tue, 30 Aug 2016 06:29:09 GMT</pubDate></item></channel></rss>